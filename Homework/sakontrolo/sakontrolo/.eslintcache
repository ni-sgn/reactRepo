[{"C:\\Users\\user\\Documents\\coding_reps\\reactRepo\\Homework\\sakontrolo\\sakontrolo\\src\\index.js":"1","C:\\Users\\user\\Documents\\coding_reps\\reactRepo\\Homework\\sakontrolo\\sakontrolo\\src\\App.js":"2","C:\\Users\\user\\Documents\\coding_reps\\reactRepo\\Homework\\sakontrolo\\sakontrolo\\src\\Components\\Gallery\\ImageList.js":"3","C:\\Users\\user\\Documents\\coding_reps\\reactRepo\\Homework\\sakontrolo\\sakontrolo\\src\\Components\\Gallery\\Image.js":"4","C:\\Users\\user\\Documents\\coding_reps\\reactRepo\\Homework\\sakontrolo\\sakontrolo\\src\\DB\\dbInterface.js":"5","C:\\Users\\user\\Documents\\coding_reps\\reactRepo\\Homework\\sakontrolo\\sakontrolo\\src\\Helpers\\Validation.js":"6"},{"size":200,"mtime":1608583995072,"results":"7","hashOfConfig":"8"},{"size":2279,"mtime":1608605671006,"results":"9","hashOfConfig":"8"},{"size":451,"mtime":1608596492883,"results":"10","hashOfConfig":"8"},{"size":503,"mtime":1608604108105,"results":"11","hashOfConfig":"8"},{"size":455,"mtime":1608594391978,"results":"12","hashOfConfig":"8"},{"size":758,"mtime":1608599446807,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1evajqq",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\user\\Documents\\coding_reps\\reactRepo\\Homework\\sakontrolo\\sakontrolo\\src\\index.js",[],["30","31"],"C:\\Users\\user\\Documents\\coding_reps\\reactRepo\\Homework\\sakontrolo\\sakontrolo\\src\\App.js",["32","33"],"/**\n * Magali xarisxis suratebi localStorage-s male avseben\n * Tu gashvebamde localStorage sufta ar aris sxva monacemebisagan\n *                aplikacia gamartulad ver imushavebs\n */\n\n//components\nimport {useState, useEffect, useRef} from 'react'\nimport ImageList from './Components/Gallery/ImageList'\n\n//database\nimport * as db from './DB/dbInterface'\n\n//styles\nimport './Styles/Styles.css';\n\n//additional\nimport * as helper from \"./Helpers/Validation\"\nimport { render } from '@testing-library/react';\n\n\nfunction App() {\n  const [Images, setImages] = useState([])\n  const ValRef = useRef()\n  const FocusRef = useRef()\n\n\n  useEffect( () =>\n  {\n    const InitialGallery = db.getImageList\n    setImages(InitialGallery)\n  }, [] )\n\n\n\nconst handleInsert = (event) =>\n  {\n    var input = event.target;\n    var reader = new FileReader();\n  \n    reader.onload = function()\n    {\n      var dataURL = reader.result\n      var FileName = helper.getNameAndExtension(input.files[0].name)\n\n      //sending getImageList like this might be bad, reference to something already existing would be better\n      //but when I send Image as a parameter, it isn't working...\n      if(helper.ValImageExtension(FileName[1]) && helper.ValImageNameCollision(FileName[0], db.getImageList()))\n      {\n          ValRef.current.style.backgroundColor = \"green\"\n          \n          \n          const newImage = \n          {\n          name: FileName[0],\n          data: dataURL\n          }\n          db.addImage(newImage)\n          \n          const UpdatedGallery = db.getImageList\n          setImages(UpdatedGallery)  \n          \n\n      }else{\n        ValRef.current.style.backgroundColor =\"red\"\n        FocusRef.current.focus();\n       }\n    };\n    \n    if(input.files[0])\n      reader.readAsDataURL(input.files[0])\n  }\n\n  const handleRemove = (ImageName) =>\n  {\n      const temp = Images.filter(element => element.name !== ImageName)\n      const NewImageList = db.pseudoRemoveImage(temp)\n      setImages(temp)\n      \n  }\n\n\n  return (\n    <div className=\"App\">\n\n        <form id=\"UploadForm\" ref={ValRef}>\n\n            <input type=\"file\" onChange={handleInsert} id=\"Upload\" ref={FocusRef}/>\n\n        </form>\n        <ImageList Images={Images} handleRemove={handleRemove}/>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\user\\Documents\\coding_reps\\reactRepo\\Homework\\sakontrolo\\sakontrolo\\src\\Components\\Gallery\\ImageList.js",["34","35"],"import {useState, useEffect} from 'react'\r\nimport Image from './Image'\r\nimport \"../../Styles/Styles.css\"\r\n\r\nfunction ImageList(props)\r\n{\r\n    return(\r\n        <div className=\"Gallery\">\r\n            {\r\n                props.Images && props.Images.map(\r\n                    image => <Image name={image.name} data={image.data} handleRemove={props.handleRemove}/>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageList;\r\n","C:\\Users\\user\\Documents\\coding_reps\\reactRepo\\Homework\\sakontrolo\\sakontrolo\\src\\Components\\Gallery\\Image.js",["36","37"],"import {useState, useEffect} from 'react'\r\n\r\nfunction Image(props)\r\n{\r\n    return (\r\n        <div className=\"ImageWrapper\">\r\n            <div>\r\n                <img src={props.data} alt={props.name} width=\"360\" height=\"420\"/>\r\n            </div>\r\n            <div>\r\n                <p>FileName: <i>{props.name}</i></p>\r\n                <input type=\"button\" value=\"Remove\"  onClick={() => props.handleRemove(props.name)}/>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Image;","C:\\Users\\user\\Documents\\coding_reps\\reactRepo\\Homework\\sakontrolo\\sakontrolo\\src\\DB\\dbInterface.js",[],"C:\\Users\\user\\Documents\\coding_reps\\reactRepo\\Homework\\sakontrolo\\sakontrolo\\src\\Helpers\\Validation.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":19,"column":10,"nodeType":"44","messageId":"45","endLine":19,"endColumn":16},{"ruleId":"42","severity":1,"message":"46","line":77,"column":13,"nodeType":"44","messageId":"45","endLine":77,"endColumn":25},{"ruleId":"42","severity":1,"message":"47","line":1,"column":9,"nodeType":"44","messageId":"45","endLine":1,"endColumn":17},{"ruleId":"42","severity":1,"message":"48","line":1,"column":19,"nodeType":"44","messageId":"45","endLine":1,"endColumn":28},{"ruleId":"42","severity":1,"message":"47","line":1,"column":9,"nodeType":"44","messageId":"45","endLine":1,"endColumn":17},{"ruleId":"42","severity":1,"message":"48","line":1,"column":19,"nodeType":"44","messageId":"45","endLine":1,"endColumn":28},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","'NewImageList' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]